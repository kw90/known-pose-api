/**
 * Known Pose API
 * Define and retrieve (accurate) semantic poses in a 2D environment. This version is a workaround for some not yet available features of the OpenAPI Specification v3.0 (e.g. `anyOf` as a response type and adding a  `discriminator` for supporting polymorphism/composition). Therefore, ATM the sub-components BasicPose and InaccuratePose are reference objects inside their respective parent model.  
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: Kai.Waelti@dfki.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InaccuratePose from './InaccuratePose';

/**
 * The InaccuratePoseArray model module.
 * @module model/InaccuratePoseArray
 * @version 1.1.10
 */
class InaccuratePoseArray {
    /**
     * Constructs a new <code>InaccuratePoseArray</code>.
     * Array containing matching poses
     * @alias module:model/InaccuratePoseArray
     * @param poseArray {Array.<module:model/InaccuratePose>} 
     */
    constructor(poseArray) { 
        
        InaccuratePoseArray.initialize(this, poseArray);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, poseArray) { 
        obj['pose_array'] = poseArray;
    }

    /**
     * Constructs a <code>InaccuratePoseArray</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InaccuratePoseArray} obj Optional instance to populate.
     * @return {module:model/InaccuratePoseArray} The populated <code>InaccuratePoseArray</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InaccuratePoseArray();

            if (data.hasOwnProperty('pose_array')) {
                obj['pose_array'] = ApiClient.convertToType(data['pose_array'], [InaccuratePose]);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/InaccuratePose>} pose_array
 */
InaccuratePoseArray.prototype['pose_array'] = undefined;






export default InaccuratePoseArray;

