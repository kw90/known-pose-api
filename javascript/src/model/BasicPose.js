/**
 * Known Pose API
 * Define and retrieve (accurate) semantic poses in a 2D environment. This version is a workaround for some not yet available features of the OpenAPI Specification v3.0 (e.g. `anyOf` as a response type and adding a  `discriminator` for supporting polymorphism/composition). Therefore, ATM the sub-components BasicPose and InaccuratePose are reference objects inside their respective parent model.  
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: Kai.Waelti@dfki.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Orientation from './Orientation';
import Position from './Position';

/**
 * The BasicPose model module.
 * @module model/BasicPose
 * @version 1.1.10
 */
class BasicPose {
    /**
     * Constructs a new <code>BasicPose</code>.
     * An basic Pose in free space composed of position and orientation.
     * @alias module:model/BasicPose
     * @param name {String} 
     */
    constructor(name) { 
        
        BasicPose.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>BasicPose</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BasicPose} obj Optional instance to populate.
     * @return {module:model/BasicPose} The populated <code>BasicPose</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BasicPose();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = Position.constructFromObject(data['position']);
            }
            if (data.hasOwnProperty('orientation')) {
                obj['orientation'] = Orientation.constructFromObject(data['orientation']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
BasicPose.prototype['name'] = undefined;

/**
 * @member {module:model/Position} position
 */
BasicPose.prototype['position'] = undefined;

/**
 * @member {module:model/Orientation} orientation
 */
BasicPose.prototype['orientation'] = undefined;






export default BasicPose;

