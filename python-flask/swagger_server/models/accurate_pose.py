# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.inaccurate_pose import InaccuratePose  # noqa: F401,E501
from swagger_server import util


class AccuratePose(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, inaccurate_pose: InaccuratePose=None, reference_scan: str=None):  # noqa: E501
        """AccuratePose - a model defined in Swagger

        :param inaccurate_pose: The inaccurate_pose of this AccuratePose.  # noqa: E501
        :type inaccurate_pose: InaccuratePose
        :param reference_scan: The reference_scan of this AccuratePose.  # noqa: E501
        :type reference_scan: str
        """
        self.swagger_types = {
            'inaccurate_pose': InaccuratePose,
            'reference_scan': str
        }

        self.attribute_map = {
            'inaccurate_pose': 'inaccurate_pose',
            'reference_scan': 'reference_scan'
        }
        self._inaccurate_pose = inaccurate_pose
        self._reference_scan = reference_scan

    @classmethod
    def from_dict(cls, dikt) -> 'AccuratePose':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccuratePose of this AccuratePose.  # noqa: E501
        :rtype: AccuratePose
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inaccurate_pose(self) -> InaccuratePose:
        """Gets the inaccurate_pose of this AccuratePose.


        :return: The inaccurate_pose of this AccuratePose.
        :rtype: InaccuratePose
        """
        return self._inaccurate_pose

    @inaccurate_pose.setter
    def inaccurate_pose(self, inaccurate_pose: InaccuratePose):
        """Sets the inaccurate_pose of this AccuratePose.


        :param inaccurate_pose: The inaccurate_pose of this AccuratePose.
        :type inaccurate_pose: InaccuratePose
        """
        if inaccurate_pose is None:
            raise ValueError("Invalid value for `inaccurate_pose`, must not be `None`")  # noqa: E501

        self._inaccurate_pose = inaccurate_pose

    @property
    def reference_scan(self) -> str:
        """Gets the reference_scan of this AccuratePose.

        Contents of the reference scan assembled as point cloud data following [RFC 4648 ยง 5](https://tools.ietf.org/html/rfc4648#section-5)  # noqa: E501

        :return: The reference_scan of this AccuratePose.
        :rtype: str
        """
        return self._reference_scan

    @reference_scan.setter
    def reference_scan(self, reference_scan: str):
        """Sets the reference_scan of this AccuratePose.

        Contents of the reference scan assembled as point cloud data following [RFC 4648 ยง 5](https://tools.ietf.org/html/rfc4648#section-5)  # noqa: E501

        :param reference_scan: The reference_scan of this AccuratePose.
        :type reference_scan: str
        """
        if reference_scan is None:
            raise ValueError("Invalid value for `reference_scan`, must not be `None`")  # noqa: E501

        self._reference_scan = reference_scan
