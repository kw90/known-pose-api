/* 
 * Known Pose API
 *
 * Define and retrieve (accurate) semantic poses in a 2D environment. This version is a workaround for some not yet available features of the OpenAPI Specification v3.0 (e.g. `anyOf` as a response type and adding a  `discriminator` for supporting polymorphism/composition). Therefore, ATM the sub-components BasicPose and InaccuratePose are reference objects inside their respective parent model.  
 *
 * OpenAPI spec version: 1.1.0
 * Contact: Kai.Waelti@dfki.de
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing InaccuratePose
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class InaccuratePoseTests
    {
        // TODO uncomment below to declare an instance variable for InaccuratePose
        //private InaccuratePose instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of InaccuratePose
            //instance = new InaccuratePose();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of InaccuratePose
        /// </summary>
        [Test]
        public void InaccuratePoseInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" InaccuratePose
            //Assert.IsInstanceOfType<InaccuratePose> (instance, "variable 'instance' is a InaccuratePose");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Dns'
        /// </summary>
        [Test]
        public void DnsTest()
        {
            // TODO unit test for the property 'Dns'
        }
        /// <summary>
        /// Test the property 'BasicPose'
        /// </summary>
        [Test]
        public void BasicPoseTest()
        {
            // TODO unit test for the property 'BasicPose'
        }
        /// <summary>
        /// Test the property 'IsAccurate'
        /// </summary>
        [Test]
        public void IsAccurateTest()
        {
            // TODO unit test for the property 'IsAccurate'
        }
        /// <summary>
        /// Test the property 'TakenAt'
        /// </summary>
        [Test]
        public void TakenAtTest()
        {
            // TODO unit test for the property 'TakenAt'
        }

    }

}
